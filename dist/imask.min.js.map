{"version":3,"file":"imask.min.js","sources":["../src/utils.js","../src/imask.js","../src/masks/base.js","../src/masks/regexp.js","../src/masks/func.js","../src/masks/pattern.js","../src/masks/pipe.js"],"sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nvar DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n\r\n\r\nexport\r\nfunction extendDetailsAdjustments(str, details) {\r\n  var cursorPos = details.cursorPos;\r\n  var oldSelection = details.oldSelection;\r\n  var oldValue = details.oldValue;\r\n\r\n  var startChangePos = Math.min(cursorPos, oldSelection.start);\r\n  var insertedCount = cursorPos - startChangePos;\r\n  // Math.max for opposite operation\r\n  var removedCount = Math.max((oldSelection.end - startChangePos) ||\r\n    // for Delete\r\n    oldValue.length - str.length, 0);\r\n\r\n  return {\r\n    ...details,\r\n    startChangePos,\r\n    head: str.substring(0, startChangePos),\r\n    tail: str.substring(startChangePos + insertedCount),\r\n    inserted: str.substr(startChangePos, insertedCount),\r\n    removed: oldValue.substr(startChangePos, removedCount),\r\n    removeDirection: removedCount &&\r\n      ((oldSelection.end === cursorPos || insertedCount) ?\r\n        DIRECTION.RIGHT :\r\n        DIRECTION.LEFT)\r\n  };\r\n}\r\n\r\n\r\nexport\r\nfunction indexInDirection (pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n","import {isString} from './utils';\r\n\r\nimport BaseMask from './masks/base';\r\nimport RegExpMask from './masks/regexp';\r\nimport FuncMask from './masks/func';\r\nimport PatternMask from './masks/pattern';\r\nimport PipeMask from './masks/pipe';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n  var mask = IMask.MaskFactory(el, opts);\r\n  mask.bindEvents();\r\n  // refresh\r\n  mask.rawValue = el.value;\r\n  return mask;\r\n}\r\n\r\nIMask.MaskFactory = function (el, opts) {\r\n  var mask = opts.mask;\r\n  if (mask instanceof BaseMask) return mask;\r\n  if (mask instanceof RegExp) return new RegExpMask(el, opts);\r\n  if (mask instanceof Array) return new PipeMask(el, opts);\r\n  if (isString(mask)) return new PatternMask(el, opts);\r\n  if (mask.prototype instanceof BaseMask) return new mask(el, opts);\r\n  if (mask instanceof Function) return new FuncMask(el, opts);\r\n  return new BaseMask(el, opts);\r\n}\r\nIMask.BaseMask = BaseMask;\r\nIMask.FuncMask = FuncMask;\r\nIMask.RegExpMask = RegExpMask;\r\nIMask.PatternMask = PatternMask;\r\nwindow.IMask = IMask;\r\n","import {conform, extendDetailsAdjustments} from '../utils';\r\n\r\n\r\nexport default\r\nclass BaseMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.mask = opts.mask;\r\n\r\n    this._listeners = {};\r\n    this._refreshingCount = 0;\r\n    this._rawValue = \"\";\r\n    this._unmaskedValue = \"\";\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  get rawValue () {\r\n    return this._rawValue;\r\n  }\r\n\r\n  set rawValue (str) {\r\n    this.processInput(str, {\r\n      cursorPos: str.length,\r\n      oldValue: this.rawValue,\r\n      oldSelection: {\r\n        start: 0,\r\n        end: this.rawValue.length\r\n      }\r\n    });\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.rawValue = value;\r\n  }\r\n\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  processInput (inputValue, details) {\r\n    details = {\r\n      cursorPos: this.cursorPos,\r\n      oldSelection: this._selection,\r\n      oldValue: this.rawValue,\r\n      oldUnmaskedValue: this.unmaskedValue,\r\n      ...details\r\n    };\r\n\r\n    details = extendDetailsAdjustments(inputValue, details);\r\n\r\n    var res = conform(this.resolve(inputValue, details),\r\n      inputValue,\r\n      this.rawValue);\r\n\r\n    this.updateElement(res, details.cursorPos);\r\n    return res;\r\n  }\r\n\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (ev) {\r\n    if (this.rawValue !== this.el.value) {\r\n      console.warn(\"Uncontrolled input change, refresh mask manually!\");\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  updateElement (value, cursorPos) {\r\n    var unmaskedValue = this._calcUnmasked(value);\r\n    var isChanged = (this.unmaskedValue !== unmaskedValue ||\r\n      this.rawValue !== value);\r\n\r\n    this._unmaskedValue = unmaskedValue;\r\n    this._rawValue = value;\r\n\r\n    if (this.el.value !== value) this.el.value = value;\r\n    this.updateCursor(cursorPos);\r\n\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent(\"accept\");\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n       this._abortUpdateCursor();\r\n      this.cursorPos = this._changingCursorPos;\r\n    }, 10);\r\n  }\r\n\r\n  _abortUpdateCursor() {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _onInput (ev) {\r\n    this._abortUpdateCursor();\r\n    this.processInput(this.el.value);\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  // override\r\n  resolve (str, details) { return str; }\r\n\r\n  _insert (str, skipUnresolvedInput) {\r\n    for (var ci=0; ci < str.length; ++ci) {\r\n      if (!this._insertChar(str[ci], skipUnresolvedInput)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _insertChar (ch, skipUnresolvedInput) {\r\n    this._rawValue += ch;\r\n    return true;\r\n  }\r\n\r\n  _calcUnmasked (value) { return value; }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass RegExpMask extends BaseMask {\r\n  resolve (str) {\r\n    return this.mask.test(str);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass FuncMask extends BaseMask {\r\n  resolve (...args) {\r\n    return this.mask(...args);\r\n  }\r\n}\r\n","import {conform, indexInDirection, DIRECTION} from '../utils';\r\nimport BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass PatternMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this._hollows = [];\r\n    this.placeholder = opts.placeholder;\r\n    this.groups = opts.groups;\r\n    this.definitions = {\r\n      ...PatternMask.DEFINITIONS,\r\n      ...opts.definitions\r\n    };\r\n\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  group (name) {\r\n    var offsets = this._groupOffsets[name];\r\n    return offsets ?\r\n      offsets.map(off => this._extractInput(off, off + this.groups[name].length)) :\r\n      [];\r\n  }\r\n\r\n  _installDefinitions (definitions) {\r\n    this._definitions = definitions;\r\n    this._charDefs = [];\r\n    this._alignStops = [];\r\n\r\n    var pattern = this.mask;\r\n    if (!pattern || !definitions) return;\r\n\r\n    if (this.groups) {\r\n      // preprocess groups\r\n      this._groupOffsets = Object.keys(this.groups).reduce((offsets, gName) => {\r\n        var gPattern = this.groups[gName];\r\n        var offsetDiff = gPattern.length - gName.length;\r\n        pattern = pattern.replace(new RegExp(gName, 'g'), (match, offset, str) => {\r\n          if (!offsets[gName]) offsets[gName] = [];\r\n          offsets[gName].push(offset + offsets[gName].length * offsetDiff);\r\n          return gPattern;\r\n        });\r\n        return offsets;\r\n      }, {});\r\n    }\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var ch = pattern[i];\r\n      var type = !unmaskingBlock && ch in definitions ?\r\n        PatternMask.DEF_TYPES.INPUT :\r\n        PatternMask.DEF_TYPES.FIXED;\r\n      var unmasking = type === PatternMask.DEF_TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternMask.DEF_TYPES.INPUT && optionalBlock;\r\n\r\n      if (ch === PatternMask.STOP_CHAR) {\r\n        this._alignStops.push(this._charDefs.length);\r\n        continue;\r\n      }\r\n\r\n      if (ch === '{' || ch === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '[' || ch === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === PatternMask.ESCAPE_CHAR) {\r\n        ++i;\r\n        ch = pattern[i];\r\n        // TODO validation\r\n        if (!ch) break;\r\n        type = PatternMask.DEF_TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push({\r\n        char: ch,\r\n        type: type,\r\n        optional: optional,\r\n        unmasking: unmasking\r\n      });\r\n    }\r\n\r\n    this._buildResolvers();\r\n  }\r\n\r\n  _buildResolvers () {\r\n    this._resolvers = {};\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  _appendTail (str, tail, skipUnresolvedInput=true) {\r\n    var placeholderBuffer = '';\r\n    var hollows = this._hollows.slice();\r\n    var overflow = false;\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(str.length); ci < tail.length;) {\r\n      if (this._isHollow(di)) {\r\n        // TODO check other cases\r\n        ++di;\r\n        continue;\r\n      }\r\n\r\n      var ch = tail[ci];\r\n      var def = this.def(di, str + placeholderBuffer);\r\n\r\n      // failed\r\n      if (!def) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      var resolved, skipped;\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, di, str + placeholderBuffer) || '';\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        if (chres) {\r\n          chres = conform(chres, ch);\r\n        } else {\r\n          if (!def.optional && skipUnresolvedInput) {\r\n            chres = this._placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) hollows.push(di);\r\n        }\r\n\r\n        if (chres) {\r\n          str += placeholderBuffer + conform(chres, ch);\r\n          placeholderBuffer = '';\r\n        }\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n        resolved = ch === def.char && (def.unmasking || !skipUnresolvedInput);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return [str, hollows, overflow];\r\n  }\r\n\r\n  _appendTailChunks (str, chunks, skipUnresolvedInput) {\r\n    var overflow = false;\r\n    for (var ci=0; ci < chunks.length; ++ci) {\r\n      var [, input] = chunks[ci];\r\n      [str, this._hollows, overflow] = this._appendTail(str, input, skipUnresolvedInput);\r\n      if (overflow) break;\r\n\r\n      // not last - append placeholder between stops\r\n      var chunk2 = chunks[ci+1];\r\n      var stop2 = chunk2 && chunk2[0];\r\n      if (stop2) str = this._appendPlaceholderEnd(str, stop2);\r\n    }\r\n    return [str, this._hollows, overflow];\r\n  }\r\n\r\n  _extractInput (fromIndex=0, toIndex) {\r\n    var input = '';\r\n    var str = this.rawValue;\r\n\r\n    for (var ci=this._mapDefIndexToPos(fromIndex), di=fromIndex; ci<str.length && (!toIndex || di < toIndex); ++di) {\r\n      var ch = str[ci];\r\n      var def = this.def(di, str);\r\n\r\n      if (!def) break;\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (this._isInput(di) && !this._isHollow(di)) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  _extractInputChunks (stops) {\r\n    var chunks = [];\r\n    for (var si=0; si<stops.length; ++si) {\r\n      var s = stops[si];\r\n      var s2 = stops[si+1];\r\n      chunks.push([s, this._extractInput(s, s2)]);\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  _isHollow (defIndex) {\r\n    return this._hollows.indexOf(defIndex) >= 0;\r\n  }\r\n\r\n  _isHiddenHollow (defIndex) {\r\n    return this._isHollow(defIndex) && this.def(defIndex) && this.def(defIndex).optional;\r\n  }\r\n\r\n  _isInput (defIndex) {\r\n    return this.def(defIndex) && this.def(defIndex).type === PatternMask.DEF_TYPES.INPUT;\r\n  }\r\n\r\n  _hiddenHollowsBefore (defIndex) {\r\n    return this._hollows.filter(h => h < defIndex && this._isHiddenHollow(h));\r\n  }\r\n\r\n  _mapDefIndexToPos (defIndex) {\r\n    return defIndex - this._hiddenHollowsBefore(defIndex).length;\r\n  }\r\n\r\n  _mapPosToDefIndex (pos) {\r\n    var defIndex = pos;\r\n    for (var hi=0; hi<this._hollows.length; ++hi) {\r\n      var h = this._hollows[hi];\r\n      if (h >= defIndex) break;\r\n      if (this._isHiddenHollow(h)) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _generateInsertSteps (head, inserted) {\r\n    var overflow = false;\r\n\r\n    // save hollow during generation\r\n    var hollows = this._hollows;\r\n    var res;\r\n\r\n    var insertSteps = [[head, hollows.slice()]];\r\n\r\n    for (var ci=0; ci<inserted.length; ++ci) {\r\n      var ch = inserted[ci];\r\n      [res, this._hollows, overflow] = this._appendTail(head, ch, false);\r\n      if (overflow) break;\r\n      if (res !== head) {\r\n        insertSteps.push([res, this._hollows]);\r\n        head = res;\r\n      }\r\n    }\r\n\r\n    // pop hollows back\r\n    this._hollows = hollows;\r\n\r\n    return insertSteps;\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var cursorPos = details.cursorPos;\r\n    var startChangePos = details.startChangePos;\r\n    var inserted = details.inserted;\r\n    var removedCount = details.removed.length;\r\n    var tailPos = startChangePos + removedCount;\r\n    var tailDefIndex = this._mapPosToDefIndex(tailPos);\r\n    var tailAlignStopsPos = [\r\n      tailDefIndex,\r\n      ...this._alignStops\r\n        .filter(s => s >= tailDefIndex)\r\n    ];\r\n    var tailInputChunks = this._extractInputChunks(tailAlignStopsPos);\r\n\r\n    // remove hollows after cursor\r\n    var lastHollowIndex = this._mapPosToDefIndex(startChangePos);\r\n    this._hollows = this._hollows.filter(h => h < lastHollowIndex);\r\n\r\n    var res = details.head;\r\n    // if remove at left - adjust start change pos to trim holes and fixed at the end\r\n    if (details.removeDirection === DIRECTION.LEFT) res = res.slice(0, this._nearestInputPos(startChangePos));\r\n\r\n    // insert available\r\n    var insertSteps = this._generateInsertSteps(res, inserted);\r\n    for (var istep=insertSteps.length-1; istep >= 0; --istep) {\r\n      var step, tres, overflow;\r\n      [step, this._hollows] = insertSteps[istep];\r\n      [tres, this._hollows, overflow] = this._appendTailChunks(step, tailInputChunks);\r\n      if (!overflow) {\r\n        res = tres;\r\n        cursorPos = step.length;\r\n        break;\r\n      }\r\n    }\r\n\r\n    res = this._appendPlaceholderEnd(res);\r\n    details.cursorPos = this._nearestInputPos(cursorPos, details.removeDirection);\r\n\r\n    return res;\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    // fire 'complete' after 'accept' event\r\n    super._fireChangeEvents();\r\n    if (this.isComplete) this.fireEvent(\"complete\");\r\n  }\r\n\r\n  get isComplete () {\r\n    for (var di=0; ; ++di) {\r\n      var def = this.def(di);\r\n      if (!def) break;\r\n      if (this._isInput(di) && !def.optional && this._isHollow(di)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _appendPlaceholderEnd (res, toPos) {\r\n    var toDefIndex = toPos && this._mapPosToDefIndex(toPos);\r\n    for (var di=this._mapPosToDefIndex(res.length); !toDefIndex || di < toDefIndex; ++di) {\r\n      var def = this.def(di, res);\r\n      if (!def) break;\r\n\r\n      if (this._isInput(di) && !this._isHollow(di)) {\r\n        this._hollows.push(di);\r\n      }\r\n      if (this._placeholder.show === 'always' || toPos) {\r\n        res += def.type === PatternMask.DEF_TYPES.FIXED ?\r\n          def.char :\r\n          !def.optional ?\r\n            this._placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  _calcUnmasked (str) {\r\n    var unmasked = '';\r\n    for (var ci=0, di=0; ci<str.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this.def(di, str);\r\n\r\n      if (!def) break;\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.unmasking && !this._isHollow(di) &&\r\n        (this._isInput(di) && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n          def.char === ch)) {\r\n        unmasked += ch;\r\n      }\r\n      ++ci;\r\n    }\r\n    return unmasked;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this._hollows.length = 0;\r\n    var res;\r\n    [res, this._hollows] = this._appendTail('', str);\r\n    this.updateElement(this._appendPlaceholderEnd(res));\r\n\r\n    this._alignCursor();\r\n  }\r\n\r\n  get placeholder () { return this._placeholder; }\r\n\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...PatternMask.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n    this._refreshValue();\r\n  }\r\n\r\n  get placeholderLabel () {\r\n    return this.defs().map(def =>\r\n      def.type === PatternMask.DEF_TYPES.FIXED ?\r\n        def.char :\r\n        !def.optional ?\r\n          this._placeholder.char :\r\n          '').join('');\r\n  }\r\n\r\n  get definitions () { return this._definitions; }\r\n\r\n  set definitions (defs) {\r\n    this._installDefinitions(defs);\r\n    this._refreshValue();\r\n  }\r\n\r\n  get groups () { return this._groups; }\r\n\r\n  set groups (groups) {\r\n    this._groups = groups;\r\n    if (this._initialized) this.definitions = this.definitions;\r\n  }\r\n\r\n  get mask () { return this._mask; }\r\n\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    if (this._initialized) this.definitions = this.definitions;\r\n  }\r\n\r\n  defs (str) {\r\n    var defs = [];\r\n    for (var i=0; ; ++i) {\r\n      var def = this.def(i, str);\r\n      if (!def) break;\r\n      defs.push(def);\r\n    }\r\n    return defs;\r\n  }\r\n\r\n  def (index, str) {\r\n    return this._charDefs[index];\r\n  }\r\n\r\n  _refreshValue () {\r\n    if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  }\r\n\r\n  _nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    var initialDefIndex = this._mapPosToDefIndex(cursorPos);\r\n    var di = initialDefIndex;\r\n\r\n    var firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // search forward\r\n    for (nextdi = indexInDirection(di, direction); this.def(nextdi); di += direction, nextdi += direction) {\r\n      if (firstInputIndex == null && this._isInput(nextdi)) firstInputIndex = di;\r\n      if (firstVisibleHollowIndex == null && this._isHollow(nextdi) && !this._isHiddenHollow(nextdi)) firstVisibleHollowIndex = di;\r\n      if (this._isInput(nextdi) && !this._isHollow(nextdi)) {\r\n        firstFilledInputIndex = di;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backwards\r\n      direction = -direction;\r\n      var overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (nextdi = indexInDirection(di, direction); this.def(nextdi); di += direction, nextdi += direction) {\r\n        if (this._isInput(nextdi)) {\r\n          firstInputIndex = di;\r\n          if (this._isHollow(nextdi) && !this._isHiddenHollow(nextdi)) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || !this.def(nextdi);\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this._mapDefIndexToPos(di);\r\n  }\r\n\r\n  _alignCursor () {\r\n    this.cursorPos = this._nearestInputPos(this.cursorPos);\r\n  }\r\n}\r\nPatternMask.DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternMask.DEF_TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n}\r\nPatternMask.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\nPatternMask.STOP_CHAR = '\\'';\r\nPatternMask.ESCAPE_CHAR = '\\\\';\r\n","import BaseMask from './base';\r\nimport {extendDetailsAdjustments} from '../utils';\r\n\r\n\r\nexport default\r\nclass PipeMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this.multipass = opts.multipass;\r\n\r\n    this._compiledMasks = this.mask.map(m => IMask.MaskFactory(el, m));\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var res = this._pipe(str, details);\r\n    if (!this.multipass) return res;\r\n\r\n    var cursorPos = details.cursorPos;\r\n\r\n    var stepRes;\r\n    var tempRes = res;\r\n\r\n    while (stepRes !== tempRes) {\r\n      stepRes = tempRes;\r\n      tempRes = this._pipe(stepRes, {\r\n        cursorPos: stepRes.length,\r\n        oldValue: stepRes,\r\n        oldSelection: {\r\n          start: 0,\r\n          end: stepRes.length\r\n        }\r\n      });\r\n    }\r\n\r\n    details.cursorPos = cursorPos - (res.length - stepRes.length);\r\n\r\n    return stepRes;\r\n  }\r\n\r\n  _pipe (str, details) {\r\n    return this._compiledMasks.reduce((s, m) => {\r\n      var d = extendDetailsAdjustments(s, details);\r\n      var res = m.resolve(s, d);\r\n      details.cursorPos = d.cursorPos;\r\n      return res;\r\n    }, str);\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    this._compiledMasks.forEach(m => {\r\n      m.bindEvents();\r\n      // disable basemask events for child masks\r\n      BaseMask.prototype.unbindEvents.apply(m);\r\n    });\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    this._compiledMasks.forEach(m => m.unbindEvents());\r\n  }\r\n}\r\n"],"names":["isString","str","String","conform","res","fallback","extendDetailsAdjustments","details","cursorPos","oldSelection","oldValue","startChangePos","Math","min","start","insertedCount","removedCount","max","end","length","substring","substr","DIRECTION","RIGHT","LEFT","indexInDirection","pos","direction","IMask","el","opts","mask","MaskFactory","bindEvents","rawValue","value","BaseMask","_listeners","_refreshingCount","_rawValue","_unmaskedValue","saveSelection","this","bind","_onInput","_onDrop","on","ev","handler","push","off","hIndex","indexOf","splice","addEventListener","unbindEvents","removeEventListener","fireEvent","forEach","l","processInput","inputValue","_selection","unmaskedValue","resolve","updateElement","warn","selectionStart","destroy","_calcUnmasked","isChanged","updateCursor","_fireChangeEvents","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","_this","preventDefault","stopPropagation","_insert","skipUnresolvedInput","ci","_insertChar","ch","selectionEnd","document","activeElement","setSelectionRange","RegExpMask","test","FuncMask","PatternMask","_BaseMask","_hollows","placeholder","groups","definitions","DEFINITIONS","_alignCursor","_alignCursorFriendly","_initialized","group","name","offsets","_groupOffsets","map","_this2","_extractInput","_installDefinitions","_definitions","_charDefs","_alignStops","pattern","Object","keys","reduce","gName","gPattern","_this3","offsetDiff","replace","RegExp","match","offset","unmaskingBlock","optionalBlock","i","type","DEF_TYPES","INPUT","FIXED","unmasking","optional","STOP_CHAR","ESCAPE_CHAR","_buildResolvers","_resolvers","defKey","_appendTail","tail","placeholderBuffer","hollows","slice","overflow","di","_mapPosToDefIndex","_isHollow","def","resolved","skipped","chres","char","_placeholder","_appendTailChunks","chunks","input","chunk2","stop2","_appendPlaceholderEnd","fromIndex","toIndex","_mapDefIndexToPos","_isHiddenHollow","_isInput","_extractInputChunks","stops","si","s","s2","defIndex","_hiddenHollowsBefore","filter","h","_this4","hi","_generateInsertSteps","head","inserted","insertSteps","tailPos","removed","tailDefIndex","tailAlignStopsPos","tailInputChunks","lastHollowIndex","removeDirection","_nearestInputPos","istep","step","tres","isComplete","toPos","toDefIndex","show","unmasked","defs","index","_refreshValue","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","initialDefIndex","ph","DEFAULT_PLACEHOLDER","_this5","join","_groups","_mask","PipeMask","multipass","_compiledMasks","m","_pipe","stepRes","tempRes","d","prototype","apply","Array","Function","window"],"mappings":"iLACA,SAASA,EAAUC,SACK,iBAARA,GAAoBA,aAAeC,OAGnD,SACSC,EAASC,EAAKH,OAAKI,yDAAS,UAC5BL,EAASI,GACdA,EACAA,EACEH,EACAI,EAWN,SACSC,EAAyBL,EAAKM,OACjCC,EAAYD,EAAQC,UACpBC,EAAeF,EAAQE,aACvBC,EAAWH,EAAQG,SAEnBC,EAAiBC,KAAKC,IAAIL,EAAWC,EAAaK,OAClDC,EAAgBP,EAAYG,EAE5BK,EAAeJ,KAAKK,IAAKR,EAAaS,IAAMP,KAErCQ,OAASlB,EAAIkB,OAAQ,eAG3BZ,yBAEGN,EAAImB,UAAU,EAAGT,QACjBV,EAAImB,UAAUT,EAAiBI,YAC3Bd,EAAIoB,OAAOV,EAAgBI,WAC5BL,EAASW,OAAOV,EAAgBK,mBACxBA,IACbP,EAAaS,MAAQV,GAAaO,EAClCO,EAAUC,MACVD,EAAUE,QAKlB,SACSC,EAAkBC,EAAKC,UAC1BA,IAAcL,EAAUE,QAAQE,EAC7BA,EC3CT,SAASE,EAAOC,OAAIC,4DACdC,EAAOH,EAAMI,YAAYH,EAAIC,YAC5BG,eAEAC,SAAWL,EAAGM,MACZJ,89BDALT,QACI,QACC,QACA,GEdHc,wBACSP,EAAIC,kBACVD,GAAKA,OACLE,KAAOD,EAAKC,UAEZM,mBACAC,iBAAmB,OACnBC,UAAY,QACZC,eAAiB,QAEjBC,cAAgBC,KAAKD,cAAcE,KAAKD,WACxCE,SAAWF,KAAKE,SAASD,KAAKD,WAC9BG,QAAUH,KAAKG,QAAQF,KAAKD,yBAGnCI,YAAIC,EAAIC,UACDN,KAAKL,WAAWU,KAAKL,KAAKL,WAAWU,YACrCV,WAAWU,GAAIE,KAAKD,GAClBN,kBAGTQ,aAAKH,EAAIC,MACFN,KAAKL,WAAWU,OAChBC,OAIDG,EAAST,KAAKL,WAAWU,GAAIK,QAAQJ,UACrCG,GAAU,GAAGT,KAAKL,WAAWgB,OAAOF,EAAQ,GACzCT,YALEA,KAAKL,WAAWU,iBAgC3Bd,2BACOJ,GAAGyB,iBAAiB,UAAWZ,KAAKD,oBACpCZ,GAAGyB,iBAAiB,QAASZ,KAAKE,eAClCf,GAAGyB,iBAAiB,OAAQZ,KAAKG,sBAGxCU,6BACO1B,GAAG2B,oBAAoB,UAAWd,KAAKD,oBACvCZ,GAAG2B,oBAAoB,QAASd,KAAKE,eACrCf,GAAG2B,oBAAoB,OAAQd,KAAKG,sBAG3CY,mBAAWV,IACOL,KAAKL,WAAWU,QACtBW,QAAQ,mBAAKC,mBAGzBC,sBAAcC,EAAYtD,KASdD,EAAyBuD,iBAPtBnB,KAAKlC,uBACFkC,KAAKoB,oBACTpB,KAAKR,0BACGQ,KAAKqB,eACpBxD,QAKDH,EAAMD,EAAQuC,KAAKsB,QAAQH,EAAYtD,GACzCsD,EACAnB,KAAKR,sBAEF+B,cAAc7D,EAAKG,EAAQC,WACzBJ,eAyBTqC,uBAAeM,GACTL,KAAKR,WAAaQ,KAAKb,GAAGM,eACpB+B,KAAK,0DAEVJ,kBACIpB,KAAKyB,mBACPzB,KAAKlC,wBAId4D,wBACOb,oBACAlB,WAAWlB,OAAS,eAG3B8C,uBAAe9B,EAAO3B,OAChBuD,EAAgBrB,KAAK2B,cAAclC,GACnCmC,EAAa5B,KAAKqB,gBAAkBA,GACtCrB,KAAKR,WAAaC,OAEfK,eAAiBuB,OACjBxB,UAAYJ,EAEbO,KAAKb,GAAGM,QAAUA,IAAOO,KAAKb,GAAGM,MAAQA,QACxCoC,aAAa/D,GAEd8D,GAAW5B,KAAK8B,iCAGtBA,kCACOf,UAAU,uBAGjBc,sBAAc/D,GACK,MAAbA,SACCA,UAAYA,OAGZiE,mBAAmBjE,iBAG1BiE,4BAAoBjE,mBACbkE,0BACAC,mBAAqBnE,OACrBoE,gBAAkBC,WAAW,aAC1BH,uBACDlE,UAAYsE,EAAKH,oBACrB,iBAGLD,8BACMhC,KAAKkC,+BACMlC,KAAKkC,wBACXlC,KAAKkC,8BAIhBhC,kBAAUG,QACH2B,0BACAd,aAAalB,KAAKb,GAAGM,oBAG5BU,iBAASE,KACJgC,mBACAC,+BAILhB,iBAAS/D,EAAKM,UAAkBN,eAEhCgF,iBAAShF,EAAKiF,OACP,IAAIC,EAAG,EAAGA,EAAKlF,EAAIkB,SAAUgE,MAC3BzC,KAAK0C,YAAYnF,EAAIkF,GAAKD,GAAsB,OAAO,SAEvD,eAGTE,qBAAaC,EAAIH,eACV3C,WAAa8C,GACX,eAGThB,uBAAelC,UAAgBA,8CAnKtBO,KAAKH,wBAGAtC,QACP2D,aAAa3D,aACLA,EAAIkB,gBACLuB,KAAKR,6BAEN,MACFQ,KAAKR,SAASf,uDAMhBuB,KAAKF,6BAGKL,QACZD,SAAWC,gDA0CTO,KAAKkC,gBACVlC,KAAKiC,mBAELjC,KAAKb,GAAGsC,wDAIHzB,KAAKkC,gBACVlC,KAAKiC,mBAELjC,KAAKb,GAAGyD,2BAGG5D,GACTgB,KAAKb,KAAO0D,SAASC,qBAEpB3D,GAAG4D,kBAAkB/D,EAAKA,QAC1Be,0BC/GHiD,sGACJ1B,iBAAS/D,UACAyC,KAAKX,KAAK4D,KAAK1F,OAFDmC,GCAnBwD,sGACJ5B,0BACStB,KAAKX,+BAFOK,GCCjByD,yBACShE,EAAIC,0BACfgE,YAAMjE,EAAIC,aAELiE,cACAC,YAAclE,EAAKkE,cACnBC,OAASnE,EAAKmE,SACdC,iBACAL,EAAYM,YACZrE,EAAKoE,eAGLE,aAAetB,EAAKsB,aAAazD,UACjC0D,qBAAuBvB,EAAKuB,qBAAqB1D,UAEjD2D,cAAe,8BAGtBD,gCACM3D,KAAKyB,iBAAmBzB,KAAKlC,gBAC5B4F,4BAGPnE,kCACQA,2BACDJ,GAAGyB,iBAAiB,QAASZ,KAAK2D,mCAGzC9C,oCACQA,6BACD1B,GAAG2B,oBAAoB,QAASd,KAAK2D,mCAG5CE,eAAOC,cACDC,EAAU/D,KAAKgE,cAAcF,UAC1BC,EACLA,EAAQE,IAAI,mBAAOC,EAAKC,cAAc3D,EAAKA,EAAM0D,EAAKX,OAAOO,GAAMrF,0BAIvE2F,6BAAqBZ,mBACda,aAAeb,OACfc,kBACAC,mBAEDC,EAAUxE,KAAKX,QACdmF,GAAYhB,GAEbxD,KAAKuD,cAEFS,cAAgBS,OAAOC,KAAK1E,KAAKuD,QAAQoB,OAAO,SAACZ,EAASa,OACzDC,EAAWC,EAAKvB,OAAOqB,GACvBG,EAAaF,EAASpG,OAASmG,EAAMnG,gBAC/B+F,EAAQQ,QAAQ,IAAIC,OAAOL,EAAO,KAAM,SAACM,EAAOC,EAAQ5H,UAC3DwG,EAAQa,KAAQb,EAAQa,SACrBA,GAAOrE,KAAK4E,EAASpB,EAAQa,GAAOnG,OAASsG,GAC9CF,IAEFd,YAMN,IAFDqB,GAAiB,EACjBC,GAAgB,EACXC,EAAE,EAAGA,EAAEd,EAAQ/F,SAAU6G,EAAG,KAC/B3C,EAAK6B,EAAQc,GACbC,GAAQH,GAAkBzC,KAAMa,EAClCL,EAAYqC,UAAUC,MACtBtC,EAAYqC,UAAUE,MACpBC,EAAYJ,IAASpC,EAAYqC,UAAUC,OAASL,EACpDQ,EAAWL,IAASpC,EAAYqC,UAAUC,OAASJ,KAEnD1C,IAAOQ,EAAY0C,aAKZ,MAAPlD,GAAqB,MAAPA,KAKP,MAAPA,GAAqB,MAAPA,MAKdA,IAAOQ,EAAY2C,YAAa,MAChCR,MACGd,EAAQc,IAEJ,QACFnC,EAAYqC,UAAUE,WAG1BpB,UAAU/D,WACPoC,OACA4C,WACIK,YACCD,YAhBMN,UALCD,YALbb,YAAYhE,KAAKP,KAAKsE,UAAU7F,aA8BpCsH,gCAGPA,gCACOC,kBACA,IAAIC,KAAUjG,KAAKwD,iBACjBwC,WAAWC,GAAU/G,MAAMI,YAAYU,KAAKb,SACzCa,KAAKwD,YAAYyC,kBAK7BC,qBAAa3I,EAAK4I,OAKX,IALiB3D,6DAClB4D,EAAoB,GACpBC,EAAUrG,KAAKqD,SAASiD,QACxBC,GAAW,EAEN9D,EAAG,EAAG+D,EAAGxG,KAAKyG,kBAAkBlJ,EAAIkB,QAASgE,EAAK0D,EAAK1H,WAC1DuB,KAAK0G,UAAUF,KAEfA,WAIA7D,EAAKwD,EAAK1D,GACVkE,EAAM3G,KAAK2G,IAAIH,EAAIjJ,EAAM6I,OAGxBO,EAAK,IACG,YAITC,EAAUC,KACVF,EAAIpB,OAASpC,EAAYqC,UAAUC,MAAO,KAExCqB,EADW9G,KAAKgG,WAAWW,EAAII,MACdzF,QAAQqB,EAAI6D,EAAIjJ,EAAM6I,IAAsB,OACpDU,KACFA,IAAUH,EAAIf,SAErBkB,IACMrJ,EAAQqJ,EAAOnE,KAElBgE,EAAIf,UAAYpD,MACXxC,KAAKgH,aAAaD,QAChB,GAEPF,GAASR,EAAQ9F,KAAKiG,IAGzBM,OACKV,EAAoB3I,EAAQqJ,EAAOnE,KACtB,YAGDgE,EAAII,OACdpE,IAAOgE,EAAII,OAASJ,EAAIhB,YAAcnD,GAG9CqE,KAAWL,GACZI,GAAYC,MAAWpE,SAGrBlF,EAAK8I,EAASE,gBAGxBU,2BAAmB1J,EAAK2J,EAAQ1E,OAEzB,IADD+D,GAAW,EACN9D,EAAG,EAAGA,EAAKyE,EAAOzI,SAAUgE,EAAI,KAChC0E,EAASD,EAAOzE,QACUzC,KAAKkG,YAAY3I,EAAK4J,EAAO3E,kBAAnDa,qBACG,UAGV+D,EAASF,EAAOzE,EAAG,GACnB4E,EAAQD,GAAUA,EAAO,GACzBC,IAAO9J,EAAMyC,KAAKsH,sBAAsB/J,EAAK8J,WAE3C9J,EAAKyC,KAAKqD,SAAUkD,gBAG9BpC,6BAIO,IAJQoD,yDAAU,EAAGC,eACtBL,EAAQ,GACR5J,EAAMyC,KAAKR,SAENiD,EAAGzC,KAAKyH,kBAAkBF,GAAYf,EAAGe,EAAW9E,EAAGlF,EAAIkB,UAAY+I,GAAWhB,EAAKgB,KAAYhB,EAAI,KAC1G7D,EAAKpF,EAAIkF,OACHzC,KAAK2G,IAAIH,EAAIjJ,GAEb,MACNyC,KAAK0H,gBAAgBlB,KAErBxG,KAAK2H,SAASnB,KAAQxG,KAAK0G,UAAUF,KAAKW,GAASxE,KACrDF,UAEG0E,eAGTS,6BAAqBC,OAEd,IADDX,KACKY,EAAG,EAAGA,EAAGD,EAAMpJ,SAAUqJ,EAAI,KAChCC,EAAIF,EAAMC,GACVE,EAAKH,EAAMC,EAAG,KACXvH,MAAMwH,EAAG/H,KAAKmE,cAAc4D,EAAGC,YAEjCd,eAGTR,mBAAWuB,UACFjI,KAAKqD,SAAS3C,QAAQuH,IAAa,eAG5CP,yBAAiBO,UACRjI,KAAK0G,UAAUuB,IAAajI,KAAK2G,IAAIsB,IAAajI,KAAK2G,IAAIsB,GAAUrC,sBAG9E+B,kBAAUM,UACDjI,KAAK2G,IAAIsB,IAAajI,KAAK2G,IAAIsB,GAAU1C,OAASpC,EAAYqC,UAAUC,mBAGjFyC,8BAAsBD,qBACbjI,KAAKqD,SAAS8E,OAAO,mBAAKC,EAAIH,GAAYI,EAAKX,gBAAgBU,kBAGxEX,2BAAmBQ,UACVA,EAAWjI,KAAKkI,qBAAqBD,GAAUxJ,oBAGxDgI,2BAAmBzH,OAEZ,IADDiJ,EAAWjJ,EACNsJ,EAAG,EAAGA,EAAGtI,KAAKqD,SAAS5E,SAAU6J,EAAI,KACxCF,EAAIpI,KAAKqD,SAASiF,MAClBF,GAAKH,EAAU,MACfjI,KAAK0H,gBAAgBU,MAAMH,SAE1BA,eAGTM,8BAAsBC,EAAMC,OASrB,IAJD/K,EADA2I,EAAUrG,KAAKqD,SAGfqF,IAAgBF,EAAMnC,EAAQC,UAEzB7D,EAAG,EAAGA,EAAGgG,EAAShK,SAAUgE,EAAI,KACnCE,EAAK8F,EAAShG,KACezC,KAAKkG,YAAYsC,EAAM7F,GAAI,kBAAjDU,mBACG,MACV3F,IAAQ8K,MACEjI,MAAM7C,EAAKsC,KAAKqD,aACrB3F,eAKN2F,SAAWgD,EAETqC,eAGTpH,iBAAS/D,EAAKM,OACRC,EAAYD,EAAQC,UACpBG,EAAiBJ,EAAQI,eACzBwK,EAAW5K,EAAQ4K,SAEnBE,EAAU1K,EADKJ,EAAQ+K,QAAQnK,OAE/BoK,EAAe7I,KAAKyG,kBAAkBkC,GACtCG,GACFD,UACG7I,KAAKuE,YACL4D,OAAO,mBAAKJ,GAAKc,KAElBE,EAAkB/I,KAAK4H,oBAAoBkB,GAG3CE,EAAkBhJ,KAAKyG,kBAAkBxI,QACxCoF,SAAWrD,KAAKqD,SAAS8E,OAAO,mBAAKC,EAAIY,QAE1CtL,EAAMG,EAAQ2K,KAEd3K,EAAQoL,kBAAoBrK,EAAUE,OAAMpB,EAAMA,EAAI4I,MAAM,EAAGtG,KAAKkJ,iBAAiBjL,SAIpF,IADDyK,EAAc1I,KAAKuI,qBAAqB7K,EAAK+K,GACxCU,EAAMT,EAAYjK,OAAO,EAAG0K,GAAS,IAAKA,EAAO,KACpDC,EAAMC,IACcX,EAAYS,eAAxB9F,oBACsBrD,KAAKiH,kBAAkBmC,EAAML,kBAAnD1F,oBACG,GACPgG,IACMD,EAAK3K,uBAKfuB,KAAKsH,sBAAsB5J,KACzBI,UAAYkC,KAAKkJ,iBAAiBpL,EAAWD,EAAQoL,iBAEtDvL,eAGToE,yCAEQA,6BACF9B,KAAKsJ,YAAYtJ,KAAKe,UAAU,yBAYtCuG,+BAAuB5J,EAAK6L,OAErB,IADDC,EAAaD,GAASvJ,KAAKyG,kBAAkB8C,GACxC/C,EAAGxG,KAAKyG,kBAAkB/I,EAAIe,SAAU+K,GAAchD,EAAKgD,IAAchD,EAAI,KAChFG,EAAM3G,KAAK2G,IAAIH,EAAI9I,OAClBiJ,EAAK,MAEN3G,KAAK2H,SAASnB,KAAQxG,KAAK0G,UAAUF,SAClCnD,SAAS9C,KAAKiG,IAEU,WAA3BxG,KAAKgH,aAAayC,MAAqBF,QAClC5C,EAAIpB,OAASpC,EAAYqC,UAAUE,MACxCiB,EAAII,KACHJ,EAAIf,SAEH,GADA5F,KAAKgH,aAAaD,aAInBrJ,eAGTiE,uBAAepE,OAER,IADDmM,EAAW,GACNjH,EAAG,EAAG+D,EAAG,EAAG/D,EAAGlF,EAAIkB,SAAU+H,EAAI,KACpC7D,EAAKpF,EAAIkF,GACTkE,EAAM3G,KAAK2G,IAAIH,EAAIjJ,OAElBoJ,EAAK,MACN3G,KAAK0H,gBAAgBlB,KAErBG,EAAIhB,YAAc3F,KAAK0G,UAAUF,KAClCxG,KAAK2H,SAASnB,IAAOxG,KAAKgG,WAAWW,EAAII,MAAMzF,QAAQqB,EAAIF,EAAIlF,IAC9DoJ,EAAII,OAASpE,QACHA,KAEZF,UAEGiH,eAwDTC,cAAMpM,OAEC,IADDoM,KACKrE,EAAE,KAAOA,EAAG,KACfqB,EAAM3G,KAAK2G,IAAIrB,EAAG/H,OACjBoJ,EAAK,QACLpG,KAAKoG,UAELgD,eAGThD,aAAKiD,EAAOrM,UACHyC,KAAKsE,UAAUsF,gBAGxBC,yBACM7J,KAAK4D,eAAc5D,KAAKqB,cAAgBrB,KAAKqB,4BAGnD6H,0BAAkBpL,OAAWmB,yDAAUL,EAAUE,SAC1CG,EAAW,OAAOnB,MAKnBgM,EACAC,EACAC,EACAC,EANAC,EAAkBlK,KAAKyG,kBAAkB3I,GACzC0I,EAAK0D,MAQJD,EAASlL,EAAiByH,EAAIvH,GAAYe,KAAK2G,IAAIsD,GAASzD,GAAMvH,EAAWgL,GAAUhL,KACnE,MAAnB6K,GAA2B9J,KAAK2H,SAASsC,KAASH,EAAkBtD,GACzC,MAA3BwD,GAAmChK,KAAK0G,UAAUuD,KAAYjK,KAAK0H,gBAAgBuC,KAASD,EAA0BxD,GACtHxG,KAAK2H,SAASsC,KAAYjK,KAAK0G,UAAUuD,GAAS,GAC5BzD,WAKxBvH,IAAcL,EAAUE,MAA2B,MAAnBgL,EAAyB,KAGvDvD,GAAW,MAGV0D,EAASlL,EAAiByH,KAJlBvH,GAIkCe,KAAK2G,IAAIsD,MAClDjK,KAAK2H,SAASsC,OACEzD,GACdxG,KAAK0G,UAAUuD,IAAYjK,KAAK0H,gBAAgBuC,OAKlDzD,IAAO0D,IAAiB3D,GAAW,IAGnCA,GAA+B,MAAnBuD,GAX+CtD,GAAMvH,EAAWgL,GAAUhL,MAejFsH,IAAavG,KAAK2G,IAAIsD,KACE,MAAnBH,IAAyBtD,EAAKsD,QACZ,MAAzBC,MAEuB,MAA3BC,EACHA,EACAF,UAGG9J,KAAKyH,kBAAkBjB,gBAGhC9C,6BACO5F,UAAYkC,KAAKkJ,iBAAiBlJ,KAAKlC,sDA7KvC,IAAI0I,EAAG,KAAOA,EAAI,KACjBG,EAAM3G,KAAK2G,IAAIH,OACdG,EAAK,SACN3G,KAAK2H,SAASnB,KAAQG,EAAIf,UAAY5F,KAAK0G,UAAUF,GAAK,OAAO,SAEhE,+CA2CAxG,KAAKF,6BAGKvC,QACZ8F,SAAS5E,OAAS,MACnBf,IACmBsC,KAAKkG,YAAY,GAAI3I,eAAjC8F,mBACN9B,cAAcvB,KAAKsH,sBAAsB5J,SAEzCgG,0DAGqB1D,KAAKgH,2BAEhBmD,QACVnD,kBACA7D,EAAYiH,oBACZD,QAEAN,2EAIE7J,KAAK2J,OAAO1F,IAAI,mBACrB0C,EAAIpB,OAASpC,EAAYqC,UAAUE,MACjCiB,EAAII,KACHJ,EAAIf,SAEH,GADAyE,EAAKrD,aAAaD,OACduD,KAAK,+CAGWtK,KAAKqE,2BAEhBsF,QACVvF,oBAAoBuF,QACpBE,sDAGgB7J,KAAKuK,sBAEhBhH,QACLgH,QAAUhH,EACXvD,KAAK4D,eAAc5D,KAAKwD,YAAcxD,KAAKwD,iDAG5BxD,KAAKwK,oBAEhBnL,QACHmL,MAAQnL,EACTW,KAAK4D,eAAc5D,KAAKwD,YAAcxD,KAAKwD,oBA3ZzB9D,KA0ed+D,eACL,OACA,0nIACA,KAEPN,EAAYqC,iBACH,cACA,SAETrC,EAAYiH,0BACJ,YACA,KAERjH,EAAY0C,UAAY,IACxB1C,EAAY2C,YAAc,SCxfpB2E,yBACStL,EAAIC,0BACfgE,YAAMjE,EAAIC,aAELsL,UAAYtL,EAAKsL,YAEjBC,eAAiBvI,EAAK/C,KAAK4E,IAAI,mBAAK/E,MAAMI,YAAYH,EAAIyL,iCAGjEtJ,iBAAS/D,EAAKM,OACRH,EAAMsC,KAAK6K,MAAMtN,EAAKM,OACrBmC,KAAK0K,UAAW,OAAOhN,UAIxBoN,EAFAhN,EAAYD,EAAQC,UAGpBiN,EAAUrN,EAEPoN,IAAYC,KACPA,IACA/K,KAAK6K,MAAMC,aACRA,EAAQrM,gBACTqM,sBAED,MACFA,EAAQrM,mBAKXX,UAAYA,GAAaJ,EAAIe,OAASqM,EAAQrM,QAE/CqM,eAGTD,eAAOtN,EAAKM,UACHmC,KAAK2K,eAAehG,OAAO,SAACoD,EAAG6C,OAChCI,EAAIpN,EAAyBmK,EAAGlK,GAChCH,EAAMkN,EAAEtJ,QAAQyG,EAAGiD,YACflN,UAAYkN,EAAElN,UACfJ,GACNH,gBAGLgC,kCACQA,2BACDoL,eAAe3J,QAAQ,cACxBzB,eAEO0L,UAAUpK,aAAaqK,MAAMN,kBAI1C/J,oCACQA,6BACD8J,eAAe3J,QAAQ,mBAAK4J,EAAE/J,qBAvDhBnB,ULavBR,EAAMI,YAAc,SAAUH,EAAIC,OAC5BC,EAAOD,EAAKC,YACZA,aAAgBK,EAAiBL,EACjCA,aAAgB4F,OAAe,IAAIjC,EAAW7D,EAAIC,GAClDC,aAAgB8L,MAAc,IAAIV,EAAStL,EAAIC,GAC/C9B,EAAS+B,GAAc,IAAI8D,EAAYhE,EAAIC,GAC3CC,EAAK4L,qBAAqBvL,EAAiB,IAAIL,EAAKF,EAAIC,GACxDC,aAAgB+L,SAAiB,IAAIlI,EAAS/D,EAAIC,GAC/C,IAAIM,EAASP,EAAIC,IAE1BF,EAAMQ,SAAWA,EACjBR,EAAMgE,SAAWA,EACjBhE,EAAM8D,WAAaA,EACnB9D,EAAMiE,YAAcA,EACpBkI,OAAOnM,MAAQA"}